# yaml-language-server: $schema=https://raw.githubusercontent.com/lwsa-idp/static/main/schemas/blueprint.json
# WordPress, com volume persistente, MySQL com 3 replicas e memcached com 2 replicas
# Replicas podem ser usadas em services e dbServers, se não especificadas se assume 1 replica por default
# Acessível incluster via via http://<name>.<namespace> ex. http://wp.portal
# Com ingress.enabled acessível externamente via https://<name>.<namespace>.<env>.<proj>.ingress.sh, ex. https://portal-wp.global.prod.demo.ingress.sh e certificado auto-renovado
# Passa variável de ambiente PORT=10000 por padrão para container, que podemos sobrescrever com parâmetro port como é o caso aqui, pois a imagem WordPress é hardcoded para ouvir na porta 80.
# Ao definir as conexões abaixo, são passadas variáveis de ambiente DB_NAME, DB_HOST, DB_USER, DB_PASSWORD e DATABASE_URL para o container
# Para type dragonfly são passadas automaticamente as variáveis de ambiente "REDIS_HOST", "MEMCACHED_HOST", "REDIS_PASSWORD", "REDIS_URL"
# memcached ativado via opção memcached.enabled, caso contrário Dragonfly roda como Redis

services:
  - name: wp
    ingress:
      enabled: true
      # Se adicionados, um ou mais hosts terão certificados gerenciados automaticamente com validação http-01
      # Obrigatório criar registro CNAME apontando para https://<namespace>-<name>.global.<env>.<project>.ingress.sh ou certificado não validará, ex:
      # www CNAME portal-wp.global.prod.demo.ingress.sh
      # Não instala certificado se cluster em recovery ou standby
      # hosts:
      #   - www.giba.tech
    image: wordpress:php8.3-apache
    # Porta interna onde o container ouve, opcional, default 10000
    # Valor é passado via variável de ambiente PORT para o container
    # Número de replicas, default 1. Não pode ser maior que 1 se o serviço monta volumes, como é o caso aqui.
    # replicas: 1
    port: 80
    plan: small
    envVarsFrom:
      dbServers:
        # name e type sempre obrigatórios e devem bater com as definições em dbServers abaixo
        - name: wp-db
          type: pxc
          # Variáveis de ambiente são criadas via estes mapeamentos adicionalmente às descritas acima
          mappings:
            WORDPRESS_DB_NAME: DB_NAME
            WORDPRESS_DB_HOST: DB_HOST
            WORDPRESS_DB_USER: DB_USER
            WORDPRESS_DB_PASSWORD: DB_PASSWORD
        - name: cache
          type: dragonfly
    # Volume deve estar definido em volumes abaixo com mesmo nome.
    # Proibido caso replicas maior que 1
    mountVolumes:
      - name: wp-vol
        path: /var/www/html
    # Usado em conjunto com o exemplo no namespace "bench"
    allowFromServices:
      - namespace: bench
        name: console

dbServers:
  - name: wp-db
    type: pxc
    replicas: 3
    # "8,0" ou "5.7"
    version: "8.0"
    plan: small
    size: 60Gi
    # Default 1 replica. Para prod usar sempre 3
    # replicas: 3

  - name: cache
    type: dragonfly
    # Default 1 replica. Para prod usar ao menos 2
    replicas: 2
    plan: micro
    memcached:
      enabled: true
    snapshot:
      enabled: true
      size: 2Gi

volumes:
  - name: wp-vol
    size: 100Gi