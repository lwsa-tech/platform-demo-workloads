# yaml-language-server: $schema=https://raw.githubusercontent.com/lwsa-tech/platform-static/main/schemas/blueprint.json

configmaps:
  - name: mapa
    data:
      nome: Giba
      empresa: LWSA

  - name: outromapa
    data:
      foo: bar

secrets:
  - name: segredo
    namespace: utilities
    data:
      # Conteúdo do segredo deve ser criptografado via kubeseal
      chave: AgBvMIMfNr1P1r61zAdRpZO7wMNx4VLdcCJnExcseg1up5h3lE2L4P0gqFwKLZSFW3B6KJCZPLFeOezYv8QpCz4iVBF1UTQkjVX+glvt9hZRkOJxnr01dFF5AM0sMRCITLQEJPyvzIITa84Vq/mgtS9++bfMynfbwZES/hlEa4rjIJQhfcsqRdSVe8aX6/o1m4+kbKPERKUMrcaYob/jU5Fw60z/ZFQ3QI4pH3YtG8G2USlHcSyCpLd5qfWHq7vOo+Z/+n+dRHh3GtvWVfWPI6xr6mZ3lqDJ/SEG/h5ENfE7rHYxoGLKWnWNywqwCvY8K8lnyCpygXVwhYn08gUpAine8LoVMfYkpJZiZfuxLMcs4ZyLeZcUuvm4EXmk7pIC9ei8VGR9ktyVrXzaL3E8eKRLfCowvasyfABQaJ0GDKBEbK54tCPbh+DhRYp9n77NYFe+72V+SFA9YG2qvZajfAAryzXvA4O4lPROva/0NEIrwK6PknRyh8SglggkaPJj+yADWVzAuhQM+peYaCwjA/eDiWAXuF/XAYD0b0owCGNqfoUlMIX5yUR+9Pz5EVo6lqOiCJrtMV/zkqGye6BzJM/nsJktdk0ZuF3tEhAPEJXO4MoGUSn14uE/uvXKfZ0LUsYDOSamdK0GWuVzDvRdB99sCIPrxcOMLKOAUL1opaHWES6GMWe6HtFS8v2IYLPcNd3bnsGRHnvxI/gBFd5x

cronjobs:
  - name: test-cron
    image: ubuntu
    plan: pico
    schedule: "*/1 * * * * "
    command:
      - /bin/sh
      - "-c"
      - echo "Teste $a" # imprimir "Teste b"
    allowToServices:
      - namespace: portal
        name: blog
    egress:
      enabled: true
      toCIDRs:
        - range: "185.0.0.0/8"
    envVarsFrom:
      dbServers:
        - name: docdb
          type: ferretdb
    envVars:
      a: b

services:
  - name: console
    plan: pico
    image: ubuntu
    command:
      - /bin/sh
      - -c
      - while :; do sleep 86400; done
    egress:
      enabled: true
      toCIDRs:
        - range: 1.1.1.1/32
          port: 53
          protocol: UDP
      toFQDNs:
        # na ausência de port/protocol, conexões para qualquer porta e protocolo são permitidas
        - pattern: '*.ubuntu.com'
        - pattern: '*.amazonaws.com'
        - host: 'poc.object-storage.sh'
        - host: 'downloads.mongodb.com'
          port: 443
          protocol: TCP
    envVarsFrom:
      secrets:
        - name: segredo
          mappings:
            CHAVE: chave
      configMaps:
        - name: mapa
          mappings:
            NAME: nome
            COMPANY: empresa
        # na ausência de mappings, chaves do segredo são mapeadas diretamente para nomes das variáveis de ambiente
        - name: outromapa
      searches:
        - name: mysearch
          type: elasticsearch
          mappings:
            ES_HOST: ELASTICSEARCH_HOST
            ES_PORT: ELASTICSEARCH_PORT
            ES_USER: ELASTICSEARCH_USER
            ES_PASSWORD: ELASTICSEARCH_PASSWORD
            ES_URI: ELASTICSEARCH_URL
      dbServers:
        - name: docdb
          type: ferretdb

  - name: echo
    plan: pico
    # porta onde o container ouve, default 10000
    port: 3000
    # usar expose no lugar de ingress se desejar expor via IP público diretamente.
    # neste caso não suporta emissão automática de certificados
    expose:
      enabled: true
      sourceRanges:
        - "189.0.0.0/8"
        - "186.0.0.0/8"
        - "187.0.0.0/8"
    # ingress:
    #   enabled: true
    #   sourceRanges:
    #     - "189.0.0.0/8"
    #     - "186.0.0.0/8"
    #     - "187.0.0.0/8"
    image: cilium/echoserver

  - name: pgadmin
    ingress:
      enabled: true
    image: dpage/pgadmin4:8.5
    plan: micro
    envVars:
      PGADMIN_DEFAULT_EMAIL: gilberto.mautner@locaweb.com.br
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: "10000"

dbServers:
  - name: mydb
    replicas: 1
    type: pxc
    version: "8.0"
    plan: small
    size: 200Gi
    expose:
      enabled: true
    # quando true, desliga banco, sem apagar dados. Serve para economizar recursos quando não precisa
    pause: false

  # - name: mydb-copy-2
  #   replicas: 1
  #   type: pxc
  #   version: "8.0"
  #   plan: large
  #   size: 200Gi
  #   restoreFrom:
  #     name: mydb

  - name: newdb
    replicas: 1
    type: pxc
    version: "8.0"
    plan: small
    size: 600Gi
    expose:
      enabled: true

  - name: pg
    type: cnpg
    version: "16.6"
    plan: nano
    size: 300Gi
    expose:
      enabled: true
    pause: false
    replicas: 1

  # - name: pg-copy
  #   type: cnpg
  #   version: "16"
  #   plan: micro
  #   size: 90Gi
  #   restoreFrom:
  #     name: pg

  - name: docdb
    type: ferretdb
    version: "17"
    plan: nano
    size: 90Gi
    replicas: 3
    expose:
      enabled: true
      sourceRanges:
        - "189.0.0.0/8"
        - "186.0.0.0/8"
        - "187.0.0.0/8"
        - "185.0.0.0/8"
        - "177.0.0.0/8"

searches:
  - name: mysearch
    type: elasticsearch
    version: "8.17.2"
    expose:
      enabled: true
      sourceRanges:
        - "189.0.0.0/8"
        - "186.0.0.0/8"
        - "187.0.0.0/8"
        - "201.0.0.0/8"
    nodes:
      master:
        replicas: 3 # default 3
        plan: medium
        size: 80Gi
      data:
        replicas: 3 # default 3
        plan: large
        size: 160Gi
    dashboard:
      enabled: true
      sourceRanges:
        - "189.0.0.0/8"
        - "186.0.0.0/8"
        - "187.0.0.0/8"
        - "201.0.0.0/8"
        - "177.0.0.0/8"
      replicas: 1 # default 1
      plan: small