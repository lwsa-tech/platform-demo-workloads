# yaml-language-server: $schema=https://raw.githubusercontent.com/lwsa-tech/platform-static/main/schemas/blueprint.json
# Horizontal Pod Autoscaler
# Aumenta/dimunui replicas com gatilho de 200% requested CPU (dimensionado de acordo com overselling)
# Services aceitam `command` e `args` assim como containers. O comando inserido serve para container não ser encerrado
# Instruções: shell into console e execute "while sleep 0.01; do wget -q -O- http://webserver; done" digitando Ctrl-C para interromper
# Observe aumento/diminuição de replicas durante a execução
#
# Demonstramos também como abrir comunicação com outros serviços. Usar em conjunto com o exemplo no namespace "portal"
# Instruções: shell into console e execute "wget http://wp.portal" com e sem a configuração comentada abaixo
# (observe que a config. correspondente `allowFromServices` já foi colocada no blueprint do portal)

services:
  - name: console
    image: busybox
    plan: pico
    command:
      - /bin/sh
      - -c
      - while :; do sleep 86400; done
    allowToServices:
      - namespace: portal
        name: wp
      - namespace: utilities
        name: python-web-app

  - name: webserver
    image: registry.k8s.io/hpa-example
    plan: pico
    port: 80
    # Para alta disponibilidade recomendado mínimo 2 replicas
    minReplicas: 2
    maxReplicas: 10
    # abaixo opcional. Default 200% utilização (por ser baseado em requests e fazermos overselling)
    # scaleTriggers:
    #   - type: cpu
    #     metricType: Utilization
    #     metadata:
    #       value: "90"